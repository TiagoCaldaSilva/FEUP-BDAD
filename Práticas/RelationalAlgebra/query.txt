-- π nr (Aluno)
-- π cod, design (σ curso='AC' (Cadeira))
-- π Nome (Aluno ⨝ Prof)
-- π Nome (Aluno) - π Nome (Prof)
-- π Nome (Aluno) ∪ π Nome (Prof)
-- π Nome (Aluno ⨝ Aluno.nr=Prova.nr ∧ Prova.cod = 'TS1' (Prova))
-- π Nome (Aluno ⨝ Aluno.nr = Prova.nr ∧ curso='IS' (Cadeira ⨝ Prova))
-- π Nome, cod (Aluno ⨝ Prova.nota >= 9.5 ∧ Aluno.nr = Prova.nr Prova) / π cod (σ curso='IS' (Cadeira))
-- γ max(nota) -> notaMax (Prova)
-- γ avg(nota) -> avgBD (σ cod='BD' (Prova))
-- γ count(*) -> Alunos (Aluno)
-- γ curso; count(cod) -> nrCadeiras (Cadeira)
-- π Nome, nrProvas ( Aluno ⨝ γ nr; count(*) -> nrProvas (Prova))
-- γ avg(nrProvas) -> avgNumProvas (γ nr; count(*) -> nrProvas (Prova))
-- π Nome, media ((γ nr; avg(nota) -> media (γ nr, cod; max(nota) -> nota (σ nota >= 10 Prova))) ⨝ Aluno)
-- τ cod π Nome, cod, nota (Aluno ⨝ Prova ⨝ γ cod; max(nota) -> nota (Prova))

-- 17
-- cadeiraCurso = π curso, cod (Cadeira)
-- nCadeirasCurso =  γ curso; COUNT(cod) -> count (Cadeira)
-- ProvasPos = σ nota >= 9.5 (γ cod, nr; max(nota) -> nota Prova)
-- nomeCodCursoCount = π Nome, cod, curso, count (cadeiraCurso ⨝ nCadeirasCurso ⨝ ProvasPos ⨝ Aluno)

-- τ curso (π Nome, curso (σ cadeirasTerminadas=count ( γ Nome, curso, count; count(cod) -> cadeirasTerminadas (nomeCodCursoCount))))